Feature: File Quality Check and Load to Unity Catalog Sales Table

  Background:
    Given the sales file is located at "dbfs:/FileStore/tables/sales_20240611.csv"
    And the target table is "purgo_playground.sales"
    And the exception table is "purgo_playground.sales_exceptions"

  Scenario Outline: Validate and Load Sales Data
    Given the sales file is loaded into a processing environment
    When the quality checks are performed
    Then the valid records are loaded into "purgo_playground.sales"
    And the error records are loaded into "purgo_playground.sales_exceptions"

  Examples:
    | country_cd | product_id | qty_sold | sales_date   | validation_errors                            |
    | NULL       | 101        | 123      | 2023-01-15   | Missing country_cd                           |
    | US         | 101        | abc      | 2023-01-15   | qty_sold should be numeric                   |
    | US         | 101        | 123      | 01-15-2023   | sales_date should be in 'yyyy-mm-dd' format  |
    | US         | 102        | 123      | 2023-01-15   |                                               |

  Scenario: Happy Path - Valid File Structure
    Given the file has the expected number of rows and columns
    And country_cd is not NULL for all records
    And qty_sold contains only numeric values
    And product_id contains unique values
    And sales_date is in 'yyyy-mm-dd' format
    When the file is validated
    Then no validation errors are found
    And all records are loaded into "purgo_playground.sales"

  Scenario: Error Handling - Missing Values
    Given country_cd is missing in some records
    When the file is validated
    Then the records with missing country_cd are identified
    And are moved to "purgo_playground.sales_exceptions"
    And appropriate validation error messages are assigned

  Scenario: Error Handling - Numeric Validation
    Given qty_sold contains non-numeric values
    When the file is validated
    Then the records with non-numeric qty_sold are identified
    And are moved to "purgo_playground.sales_exceptions"
    And appropriate validation error messages are assigned

  Scenario: Error Handling - Duplicate Product IDs
    Given product_id contains duplicate values
    When the file is validated
    Then the records with duplicate product_id are identified
    And are moved to "purgo_playground.sales_exceptions"
    And appropriate validation error messages are assigned

  Scenario: Error Handling - Date Format Validation
    Given sales_date is not in 'yyyy-mm-dd' format
    When the file is validated
    Then the records with incorrect sales_date format are identified
    And are moved to "purgo_playground.sales_exceptions"
    And appropriate validation error messages are assigned
